#!/usr/bin/env bash
# This is a factors challenge

check_factor() {
    if [ $# -ne 1 ]; then
        printf "Usage: check_factor <number>\n"
        exit 1
    fi

    factors=$(factor "$1")
    factors_array=(${factors//[^0-9]/ })

    if [ ${#factors_array[@]} -eq 1 ]; then
        printf "%s=1*%s\n" "$1" "$1"
    else
        max_factor=${factors_array[-1]}
        second_max_factor=${factors_array[-2]}

        if [ ${#factors_array[@]} -gt 2 ]; then
            for ((i=${#factors_array[@]}-3; i>=0; i--)); do
                if [ $((factors_array[i] * second_max_factor)) -gt $((max_factor * factors_array[i+1])) ]; then
                    break
                fi

                second_max_factor=${factors_array[$i]}
            done
        fi

        printf "%s=%s*%s\n" "$1" "$max_factor" "$second_max_factor"
    fi
}

if [ $# -ne 1 ]; then
    printf 'Usage: factors <file>\n'
    exit 1
else
    while read -r number; do
        check_factor "$number"
    done < "$1"
fi
